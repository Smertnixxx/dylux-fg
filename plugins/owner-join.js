
let handler = async (m, { conn, text, usedPrefix, command, args, participants, isOwner }) => {
	
   if (!isOwner) return conn.reply(m.chat, `*–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É*\n\n–ü—Ä–∏–≤–µ—Ç @${m.sender.split('@')[0]}\n–≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å –±–æ—Ç–∞, —á—Ç–æ–±—ã –æ–Ω –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –≥—Ä—É–ø–ø–µ`.trim(), m, { mentions: [m.sender] })
	
  let time = global.db.data.users[m.sender].lastjoin + 86400000
  let linkRegex = /chat.whatsapp.com\/([0-9A-Za-z]{20,24})/i
  let delay = time => new Promise(res => setTimeout(res, time))
 
  let name = m.sender 
  let [_, code] = text.match(linkRegex) || []
  if (!args[0]) throw `‚ú≥Ô∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≥—Ä—É–ø–ø—É\n\n üìå –ü—Ä–∏–º–µ—Ä:\n *${usedPrefix + command}* <—Å—Å—ã–ª–∫–∞> <–¥–Ω–µ–π>\n\n_el —á–∏—Å–ª–æ - —ç—Ç–æ –¥–Ω–∏, –≤ —Ç–µ—á–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä—ã—Ö –±–æ—Ç –±—É–¥–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥—Ä—É–ø–ø–µ_` 
  if (!code) throw `‚ú≥Ô∏è –ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞`
  if (!args[1]) throw `üìå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π\n\n –ü—Ä–∏–º–µ—Ä:\n *${usedPrefix + command}* <—Å—Å—ã–ª–∫–∞> 2`
  if (isNaN(args[1])) throw `‚ú≥Ô∏è –ü—Ä–æ—Å—Ç–æ —á–∏—Å–ª–æ, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–µ–µ –¥–Ω–∏, –≤ —Ç–µ—á–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä—ã—Ö –±–æ—Ç –±—É–¥–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥—Ä—É–ø–ø–µ!`
  let owbot = global.owner[1] 
  m.reply(`üòé –ü–æ–¥–æ–∂–¥–∏—Ç–µ 3 —Å–µ–∫—É–Ω–¥—ã, —è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—é—Å—å –∫ –≥—Ä—É–ø–ø–µ`)
  await delay(3000)
  try {
  let res = await conn.groupAcceptInvite(code)
  let b = await conn.groupMetadata(res)
  let d = b.participants.map(v => v.id)
  let member = d.toString()
  let e = await d.filter(v => v.endsWith(owbot + '@s.whatsapp.net'))
  let nDays = 86400000 * args[1]  
  let now = new Date() * 1
  if (now < global.db.data.chats[res].expired) global.db.data.chats[res].expired += nDays
  else global.db.data.chats[res].expired = now + nDays
  if (e.length) await m.reply(`‚úÖ –Ø —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –≥—Ä—É–ø–ø–µ \n\n‚â° –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥—Ä—É–ø–ø–µo \n\n *–ò–º—è :* ${await conn.getName(res)}\n\n–±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≤–µ—Ä—à–∏—Ç —Ä–∞–±–æ—Ç—É –ø–æ—Å–ª–µ \n\n${msToDate(global.db.data.chats[res].expired - now)}`)
 
 if (e.length) await conn.reply(res, `üèÆ –ü—Ä–∏–≤–µ—Ç, –±–∞–ª–±–µ—Å

@${owbot} –æ–Ω –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å, –µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∫–∞–∫–∏–µ-–ª–∏–±–æ —Å–æ–º–Ω–µ–Ω–∏—è?
fui invitado por *${m.name}*`, m, {
    mentions: d
     }).then(async () => {
     await delay(7000)
     }).then( async () => {
     await conn.reply(res, `—Ö–æ—Ä–æ—à–æ, –≤—Å–µ —Ä–∞—Å—Å–ª–∞–±—å—Ç–µ—Å—å ü§≠`, 0)
     await conn.reply(global.owner[1]+'@s.whatsapp.net', `‚â° *–ü–†–ò–ì–õ–ê–®–ï–ù–ò–ï –í –ì–†–£–ü–ü–£*\n\n@${m.sender.split('@')[0]} –æ–Ω –ø—Ä–∏–≥–ª–∞—Å–∏–ª *${conn.user.name}*–≤ –≥—Ä—É–ø–ø—É\n\n*${await conn.getName(res)}*\n\n*ID* : ${res}\n\nüìå –°—ã–ª–ª–∫–∞ : ${args[0]}\n\n–±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≤–µ—Ä—à–∏—Ç —Ä–∞–±–æ—Ç—É –ø–æ—Å–ª–µ \n\n${msToDate(global.db.data.chats[res].expired - now)}`, null, {mentions: [m.sender]})
     })
     if (!e.length) await conn.reply(global.owner[1]+'@s.whatsapp.net', `‚â° *–ü–†–ò–ì–õ–ê–®–ï–ù–ò–ï –í –ì–†–£–ü–ü–£*\n\n@${m.sender.split('@')[0]} –æ–Ω –ø—Ä–∏–≥–ª–∞—Å–∏–ª *${conn.user.name}*–≤ –≥—Ä—É–ø–ø—É\n\n*${await conn.getName(res)}*\n\n*ID* : ${res}\n\nüìå –°—ã–ª–ª–∫–∞ : ${args[0]}\n\n–±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≤–µ—Ä—à–∏—Ç —Ä–∞–±–æ—Ç—É –ø–æ—Å–ª–µ\n\n ${msToDate(global.db.data.chats[res].expired - now)}`, null, {mentions: [m.sender]})
     if (!e.length) await m.reply(`‚ú≥Ô∏è –£—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É\n\n${await conn.getName(res)}\n\n–±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≤–µ—Ä—à–∏—Ç —Ä–∞–±–æ—Ç—É –ø–æ—Å–ª–µ *${msToDate(global.db.data.chats[res].expired - now)}*`).then(async () => {
     let mes = `–í—Å–µ–º –ø—Ä–∏–≤–µ—Çüëãüèª
     
*${conn.user.name}* —ç—Ç–æ –æ–¥–∏–Ω –∏–∑ –±–æ—Ç–æ–≤ WhatsApp –¥–ª—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤, —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Node.js, *${conn.user.name}* –ù–µ–¥–∞–≤–Ω–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã–π *${m.name}*

—á—Ç–æ–±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ–Ω—é –±–æ—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ
${usedPrefix}help
@${conn.user.jid.split('@')[0]} –æ–Ω –≤—ã–π–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ \n\n${msToDate(global.db.data.chats[res].expired - now)}`
  await conn.reply(res, mes, m, {
        mentions: d
         })
     })
    } catch (e) {
      conn.reply(global.owner[1]+'@s.whatsapp.net', e)
      throw `‚ú≥Ô∏è –ò–∑–≤–∏–Ω–∏—Ç–µ, –±–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –≥—Ä—É–ø–ø–∞–º`
      }
}
handler.help = ['–ó–∞–π—Ç–∏ <–°—Å—ã–ª–∫–∞ –Ω–∞ –≥—Ä—É–ø–ø—É> <–î–Ω–µ–π>']
handler.tags = ['owner']
handler.command = ['join', '–∑–∞–π—Ç–∏'] 

//handler.owner = true

export default handler

function msToDate(ms) {
  let d = isNaN(ms) ? '--' : Math.floor(ms / 86400000)
  let h = isNaN(ms) ? '--' : Math.floor(ms / 3600000) % 24
  let m = isNaN(ms) ? '--' : Math.floor(ms / 60000) % 60
  let s = isNaN(ms) ? '--' : Math.floor(ms / 1000) % 60
  return [d, ' *–î–Ω–µ–π*\n ', h, ' *–ß–∞—Å–æ–≤*\n ', m, ' *–ú–∏–Ω—É—Ç*\n ', s, ' *–°–µ–∫—É–Ω–¥* '].map(v => v.toString().padStart(2, 0)).join('')
}
