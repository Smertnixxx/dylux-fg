
let handler = async (m, { conn, args, usedPrefix, command }) => {
    if (!args[0] || isNaN(args[0])) throw `‚ú≥Ô∏è –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π!\n\nüìå –ü—Ä–∏–º–µ—Ä :\n*${usedPrefix + command}* 30`

    let who
    if (m.isGroup) who = args[1] ? args[1] : m.chat
    else who = args[1]

    var nDays = 86400000 * args[0]
    var now = new Date() * 1
    if (now < global.db.data.chats[who].expired) global.db.data.chats[who].expired += nDays
    else global.db.data.chats[who].expired = now + nDays
    let teks = `‚úÖ –ë—ã–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –¥–Ω–∏ –∏—Å—Ç–µ—á–µ–Ω–∏—è —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è \n*${await conn.getName(who)}* \n\n*–í —Ç–µ—á–µ–Ω–∏–µ:* ${args[0]} –î–Ω–µ–π\n\n*–û–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á–µ—Ç :* ${msToDate(global.db.data.chats[who].expired - now \n–£–¥–∞—á–∏!)}`
    conn.reply(m.chat, teks, m)
}
handler.help = ['–ü–æ—Å—Ç–∞–≤–∏—Ç—å–ê—Ä–µ–Ω–¥—É <–î–Ω–µ–π>']
handler.tags = ['group']
handler.command = ['–ø–æ—Å—Ç–∞–≤–∏—Ç—å–∞—Ä–µ–Ω–¥—É']
handler.rowner = true
export default handler

function msToDate(ms) {
  let d = isNaN(ms) ? '--' : Math.floor(ms / 86400000)
  let h = isNaN(ms) ? '--' : Math.floor(ms / 3600000) % 24
  let m = isNaN(ms) ? '--' : Math.floor(ms / 60000) % 60
  let s = isNaN(ms) ? '--' : Math.floor(ms / 1000) % 60
  return [d, ' *–î–Ω–µ–π*\n ', h, ' *–ß–∞—Å–æ–≤*\n ', m, ' *–ú–∏–Ω—É—Ç*\n ', s, ' *–°–µ–∫—É–Ω–¥* '].map(v => v.toString().padStart(2, 0)).join('')
}
